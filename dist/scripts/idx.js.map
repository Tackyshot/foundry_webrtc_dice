{"version":3,"file":"idx.js","sources":["../../src/scripts/idx.mjs"],"sourcesContent":["import { Peer } from 'peerjs';\nimport QRCode from 'qrcode';\n\nclass DiceWebRTCModule extends Application {\n    static ID = 'dice-webrtc-module';\n\n    constructor(options = {}) {\n        super(options);\n        this.peer = null;\n        this.activeConnections = new Map();\n    }\n\n    static get defaultOptions() {\n        return mergeObject(super.defaultOptions, {\n            id: this.ID,\n            title: 'Dice WebRTC Module',\n            template: `modules/${this.ID}/templates/module-config.html`,\n            width: 400,\n            height: 300,\n            resizable: true\n        });\n    }\n\n    activateListeners(html) {\n        super.activateListeners(html);\n        html.find('.generate-qr').click(this._onGenerateQR.bind(this));\n        html.find('.disconnect-all').click(this._onDisconnectAll.bind(this));\n    }\n\n    async _onGenerateQR(event) {\n        event.preventDefault();\n        if (!game.user.isGM) return;\n        await this._initializePeer();\n    }\n\n    _onDisconnectAll(event) {\n        event.preventDefault();\n        if (!game.user.isGM) return;\n        this._cleanupConnections();\n    }\n\n    async _initializePeer() {\n        if (this.peer) this.peer.destroy();\n        this.peer = new Peer();\n\n        this.peer.on('open', (id) => {\n            console.log('My peer ID is: ' + id);\n            this._generateAndDisplayQR(id);\n        });\n\n        this.peer.on('connection', this._handleIncomingConnection.bind(this));\n    }\n\n    async _generateAndDisplayQR(id) {\n        try {\n            const url = await QRCode.toDataURL(id);\n            const content = `\n                <div style=\"text-align: center;\">\n                    <h3>Scan to Connect</h3>\n                    <img src=\"${url}\" alt=\"QR Code\" style=\"max-width: 200px;\">\n                    <p>Peer ID: ${id}</p>\n                </div>\n            `;\n            \n            ChatMessage.create({\n                content: content,\n                whisper: [game.user.id],\n                type: CONST.CHAT_MESSAGE_TYPES.OTHER\n            });\n        } catch (error) {\n            console.error('Error generating QR code:', error);\n            ui.notifications.error('Failed to generate QR code.');\n        }\n    }\n\n    _handleIncomingConnection(conn) {\n        console.log('Incoming connection from:', conn.peer);\n\n        conn.on('open', () => {\n            console.log('Connection established with:', conn.peer);\n            this._authenticateConnection(conn);\n        });\n\n        conn.on('data', (data) => this._handleIncomingData(conn, data));\n        conn.on('close', () => this._handleConnectionClose(conn));\n    }\n\n    _authenticateConnection(conn) {\n        const secret = game.settings.get(DiceWebRTCModule.ID, 'secret');\n        conn.send({ type: 'auth', userName: game.user.name });\n        \n        // Implement your authentication logic here\n        // For example, wait for a response with the correct secret\n    }\n\n    _handleIncomingData(conn, data) {\n        if (!this._validateData(data)) {\n            console.error('Invalid data received:', data);\n            return;\n        }\n\n        switch (data.type) {\n            case 'auth':\n                this._handleAuthResponse(conn, data);\n                break;\n            case 'actorUpdate':\n                this._handleActorUpdate(data);\n                break;\n            case 'roll':\n                this._handleRollRequest(conn, data);\n                break;\n            // Add more cases as needed\n        }\n    }\n\n    _validateData(data) {\n        // Implement data validation using foundry.data.validators\n        return true; // Placeholder\n    }\n\n    _handleAuthResponse(conn, data) {\n        // Implement your authentication verification logic\n        // If successful:\n        this.activeConnections.set(conn.peer, conn);\n        this._syncActorData(conn);\n    }\n\n    _handleActorUpdate(data) {\n        if (!game.user.isGM) return;\n        const actor = game.actors.get(data.actorId);\n        if (actor && actor.isOwner) {\n            actor.update(data.updates);\n        }\n    }\n\n    async _handleRollRequest(conn, data) {\n        const actor = game.actors.get(data.actorId);\n        if (!actor || !actor.isOwner) return;\n\n        const rollData = actor.getRollData();\n        let roll;\n\n        switch (data.rollType) {\n            case 'attack':\n            case 'damage':\n                if (data.itemId) {\n                    const item = actor.items.get(data.itemId);\n                    if (!item) return;\n                    roll = data.rollType === 'attack' ? await item.rollAttack() : await item.rollDamage();\n                }\n                break;\n            case 'ability':\n                roll = await actor.rollAbilityTest(data.abilityId);\n                break;\n            case 'skill':\n                roll = await actor.rollSkill(data.skillId);\n                break;\n            case 'save':\n                roll = await actor.rollAbilitySave(data.abilityId);\n                break;\n            default:\n                if (data.formula) {\n                    roll = new Roll(data.formula, rollData);\n                    await roll.evaluate({async: true});\n                }\n        }\n\n        if (roll) {\n            await roll.toMessage({\n                speaker: ChatMessage.getSpeaker({actor: actor}),\n                flavor: data.flavor\n            });\n        }\n    }\n\n    _syncActorData(conn) {\n        const ownedActors = game.actors.contents.filter(a => a.isOwner);\n        ownedActors.forEach(actor => {\n            const data = actor.toObject();\n            conn.send({ type: 'actorSync', actorData: data });\n        });\n    }\n\n    _handleConnectionClose(conn) {\n        console.log('Connection closed:', conn.peer);\n        this.activeConnections.delete(conn.peer);\n    }\n\n    _cleanupConnections() {\n        this.activeConnections.forEach(conn => conn.close());\n        this.activeConnections.clear();\n        if (this.peer) {\n            this.peer.destroy();\n            this.peer = null;\n        }\n    }\n}\n\nHooks.once('init', () => {\n    game.settings.register(DiceWebRTCModule.ID, 'secret', {\n        name: 'Connection Secret',\n        hint: 'A shared secret for authenticating peer connections.',\n        scope: 'world',\n        config: true,\n        type: String,\n        default: ''\n    });\n\n    game.settings.registerMenu(DiceWebRTCModule.ID, 'configMenu', {\n        name: 'Dice WebRTC Module Configuration',\n        label: 'Configure',\n        hint: 'Configure the WebRTC module settings.',\n        icon: 'fas fa-cogs',\n        type: DiceWebRTCModule,\n        restricted: true\n    });\n});\n\nHooks.once('ready', () => {\n    game.dicewebrtc = new DiceWebRTCModule();\n});\n\nHooks.on('createChatMessage', (message, options, userId) => {\n    if (game.user.id !== userId) return;\n    \n    const messageData = {\n        type: 'chatMessage',\n        content: message.data.content,\n        speaker: message.data.speaker,\n        timestamp: message.data.timestamp\n    };\n\n    game.dicewebrtc.activeConnections.forEach(conn => {\n        if (conn.open) conn.send(messageData);\n    });\n});\n\n// Use for token updates\nconst debouncedTokenUpdate = foundry.utils.debounce((tokenId, updates) => {\n    const token = canvas.tokens.get(tokenId);\n    if (!token || !token.actor || !token.actor.isOwner) return;\n\n    game.dicewebrtc.activeConnections.forEach(conn => {\n        if (conn.open) {\n            conn.send({\n                type: 'tokenUpdate',\n                tokenId: tokenId,\n                updates: updates\n            });\n        }\n    });\n}, 100);\n\nHooks.on('updateToken', (token, updates) => {\n    debouncedTokenUpdate(token.id, updates);\n});\n"],"names":[],"mappings":"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"}